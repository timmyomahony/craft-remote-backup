{% import "_includes/forms" as forms %}

{% macro configWarning(setting, file) -%}
    {%- set configArray = craft.app.config.getConfigFromFile(file) -%}
    {%- if configArray[setting] is defined -%}
        {{- "This is being overridden by the `#{setting}` setting in the `config/#{file}.php` file." |raw }}
    {%- else -%}
        {{ false }}
    {%- endif -%}
{%- endmacro %}

{% from _self import configWarning %}

{{ forms.lightswitchField({
    first: true,
    label: "Enabled"|t('remote-backup'),
    instructions: "Enable the plugin"|t('remote-backup'),
    name: 'enabled',
    id: 'enabled',
    on: settings.enabled,
    errors: settings.getErrors('enabled'),
    warning: configWarning('enabled', 'remote-backup')
}) }}

<hr>

{{ forms.selectField({
    label: "Cloud Provider"|t('remote-backup'),
    id: 'cloudProvider',
    name: 'cloudProvider',
    options: [
        { label: 'Amazon S3', value: 's3' },
        { label: 'Backblaze B2', value: 'b2' }
    ],
    value: settings.cloudProvider,
    required: true,
    errors: settings.getErrors('cloudProvider'),
    warning: configWarning('cloudProvider', 'remote-backup')
}) }}

{# AWS #}
<div class="provider provider-s3">
    {{ forms.autosuggestField({
        label: "S3 Access Key"|t('remote-backup'),
        instructions: "The access key associated with your IAM user"|t('remote-backup'),
        name: 's3AccessKey',
        id: 's3AccessKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.s3AccessKey,
        required: (settings.cloudProvider == 's3'),
        type: 'password',
        errors: settings.getErrors('s3AccessKey'),
        warning: configWarning('s3AccessKey', 'remote-backup')
    }) }}

    {{ forms.autosuggestField({
        label: "S3 Secret Key",
        instructions: "The secret key associated with your IAM user"|t('remote-backup'),
        name: 's3SecretKey',
        id: 's3SecretKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.s3SecretKey,
        required: (settings.cloudProvider == 's3'),
        type: 'password',
        errors: settings.getErrors('s3SecretKey'),
        warning: configWarning('s3SecretKey', 'remote-backup')
    }) }}

    {{ forms.autosuggestField({
        label: "S3 Bucket Name"|t('remote-backup'),
        instructions: "The name of the S3 bucket you want to send backups to"|t('remote-backup'),
        name: 's3BucketName',
        id: 's3BucketName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.s3BucketName,
        placeholder: "my-craft-backups",
        required: (settings.cloudProvider == 's3'),
        errors: settings.getErrors('s3BucketName'),
        warning: configWarning('s3BucketName', 'remote-backup')
    }) }}

    {{ forms.autosuggestField({
        label: "S3 Region Name"|t('remote-backup'),
        instructions: "The AWS region your S3 bucket is in"|t('remote-backup'),
        name: 's3RegionName',
        id: 's3RegionName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.s3RegionName,
        placeholder: "us-west-2",
        required: (settings.cloudProvider == 's3'),
        errors: settings.getErrors('s3RegionName'),
        warning: configWarning('s3RegionName', 'remote-backup')
    }) }}

    {{ forms.autosuggestField({
        label: "S3 Bucket Prefix"|t('remote-backup'),
        instructions: "A path within your S3 bucket to prefix your backups with. Do not include a leading or trailing slash"|t('remote-backup'),
        name: 's3BucketPrefix',
        id: 's3BucketPrefix',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.s3BucketPrefix,
        placeholder: "craft-backups/my-site",
        errors: settings.getErrors('s3BucketPrefix'),
        warning: configWarning('s3BucketPrefix', 'remote-backup')
    }) }}
</div>

{# Backblaze B2 #}
<div class="provider provider-b2">
    {{ forms.autosuggestField({
        label: "B2 Master Key ID"|t('remote-backup'),
        instructions: "Your Backblaze master 'keyID'"|t('remote-backup'),
        name: 'b2MasterKeyID',
        id: 'b2MasterKeyID',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.b2MasterKeyID,
        required: (settings.cloudProvider == 'b2'),
        type: 'password',
        errors: settings.getErrors('b2MasterKeyID'),
        warning: configWarning('b2MasterKeyID', 'remote-backup')
    }) }}

    {{ forms.autosuggestField({
        label: "B2 Master Application Key",
        instructions: "Your Backblaze master 'applicationKey'"|t('remote-backup'),
        name: 'b2MasterAppKey',
        id: 'b2MasterAppKey',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.b2MasterAppKey,
        required: (settings.cloudProvider == 'b2'),
        type: 'password',
        errors: settings.getErrors('b2MasterAppKey'),
        warning: configWarning('b2MasterAppKey', 'remote-backup')
    }) }}

    {{ forms.autosuggestField({
        label: "S2 Bucket Name"|t('remote-backup'),
        instructions: "The name of the B2 bucket you want to send backups to"|t('remote-backup'),
        name: 'b2BucketName',
        id: 'b2BucketName',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.b2BucketName,
        placeholder: "my-craft-backups",
        required: (settings.cloudProvider == 'b2'),
        errors: settings.getErrors('b2BucketName'),
        warning: configWarning('b2BucketName', 'remote-backup')
    }) }}

    {{ forms.autosuggestField({
        label: "B2 Bucket Prefix"|t('remote-backup'),
        instructions: "A path within your B2 bucket to prefix your backups with. Do not include a leading or trailing slash"|t('remote-backup'),
        name: 'b2BucketPrefix',
        id: 'b2BucketPrefix',
        suggestEnvVars: true,
        suggestAliases: true,
        value: settings.b2BucketPrefix,
        placeholder: "craft-backups/my-site",
        errors: settings.getErrors('b2BucketPrefix'),
        warning: configWarning('b2BucketPrefix', 'remote-backup')
    }) }}
</div>

<hr>

{{ forms.lightswitchField({
    label: "Use Queue"|t('remote-backup'),
    instructions: "Use the built-in Craft queue for performing backup operations"|t('remote-backup'),
    name: 'useQueue',
    id: 'useQueue',
    on: settings.useQueue,
    errors: settings.getErrors('useQueue'),
    warning: configWarning('useQueue', 'remote-backup')
}) }}

<hr>

{{ forms.lightswitchField({
    label: "Keep Local Backups"|t('remote-backup'),
    instructions: "Keep a copy of newly created backups locally on the server"|t('remote-backup'),
    name: 'keepLocal',
    id: 'keepLocal',
    on: settings.keepLocal,
    errors: settings.getErrors('keepLocal'),
    warning: configWarning('keepLocal', 'remote-backup')
}) }}

<hr>

{{ forms.lightswitchField({
    label: "Prune Backups"|t('remote-backup'),
    instructions: "Delete old backups when new backup created"|t('remote-backup'),
    name: 'prune',
    id: 'prune',
    on: settings.prune,
    errors: settings.getErrors('prune'),
    warning: configWarning('prune', 'remote-backup')
}) }}


{{ forms.textField({
    label: "Hourly backups"|t('remote-backup'),
    type: "number",
    instructions: "The number of hourly backups to keep"|t('remote-backup'),
    name: 'pruneHourlyCount',
    id: 'pruneHourlyCount',
    value: settings.pruneHourlyCount,
    errors: settings.getErrors('pruneHourlyCount'),
    warning: configWarning('pruneHourlyCount', 'remote-backup')
}) }}

{{ forms.textField({
    label: "Daily backups"|t('remote-backup'),
    type: "number",
    instructions: "The number of daily backups to keep"|t('remote-backup'),
    name: 'pruneDailyCount',
    id: 'pruneDailyCount',
    value: settings.pruneDailyCount,
    errors: settings.getErrors('pruneDailyCount'),
    warning: configWarning('pruneDailyCount', 'remote-backup')
}) }}

{{ forms.textField({
    label: "Weekly backups"|t('remote-backup'),
    type: "number",
    instructions: "The number of weekly backups to keep"|t('remote-backup'),
    name: 'pruneWeeklyCount',
    id: 'pruneWeeklyCount',
    value: settings.pruneWeeklyCount,
    errors: settings.getErrors('pruneWeeklyCount'),
    warning: configWarning('pruneWeeklyCount', 'remote-backup')
}) }}

{{ forms.textField({
    label: "Monthly backups"|t('remote-backup'),
    type: "number",
    instructions: "The number of monthly backups to keep"|t('remote-backup'),
    name: 'pruneMonthlyCount',
    id: 'pruneMonthlyCount',
    value: settings.pruneMonthlyCount,
    errors: settings.getErrors('pruneMonthlyCount'),
    warning: configWarning('pruneMonthlyCount', 'remote-backup')
}) }}

{{ forms.textField({
    label: "Yearly backups"|t('remote-backup'),
    type: "number",
    instructions: "The number of yearly backups to keep"|t('remote-backup'),
    name: 'pruneYearlyCount',
    id: 'pruneYearlyCount',
    value: settings.pruneYearlyCount,
    errors: settings.getErrors('pruneYearlyCount'),
    warning: configWarning('pruneYearlyCount', 'remote-backup')
}) }}

<hr>

{{ forms.lightswitchField({
    label: "Hide Databases"|t('remote-backup'),
    instructions: "Hide the database section altogether from the utilities page"|t('remote-backup'),
    name: 'hideDatabases',
    id: 'hideDatabases',
    on: settings.hideDatabases,
    errors: settings.getErrors('hideDatabases'),
    warning: configWarning('hideDatabases', 'remote-backup')
}) }}

{{ forms.lightswitchField({
    label: "Hide Volumes"|t('remote-backup'),
    instructions: "Hide the volumes section altogether from the utiltiies page"|t('remote-backup'),
    name: 'hideVolumes',
    id: 'hideVolumes',
    on: settings.hideVolumes,
    errors: settings.getErrors('hideVolumes'),
    warning: configWarning('hideVolumes', 'remote-backup')
}) }}